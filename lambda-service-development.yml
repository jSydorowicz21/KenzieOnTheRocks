AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Lambda application that calls the Lambda API.
Parameters:
  EnvironmentName:
    Type: String
    Default: dev
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.192.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value:
          Ref: EnvironmentName
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    DependsOn: VPC
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Public
  PublicRoute1:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for Example Replication Group
      SecurityGroupEgress:
      - CidrIp: 0.0.0.0/0
        IpProtocol: '-1'
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: 6379
        ToPort: 6379
        IpProtocol: tcp
      VpcId:
        Ref: VPC
  SubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: Subnet Group for Example Replication Group
      SubnetIds:
      - Ref: PublicSubnet
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone:
        Fn::Select:
        - 0
        - Fn::GetAZs: ''
      CidrBlock: 10.192.11.0/24
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${EnvironmentName} Public Subnet (AZ1)
  PublicSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet
      RouteTableId:
        Ref: PublicRouteTable
  CacheParameterGroup:
    Type: AWS::ElastiCache::ParameterGroup
    Properties:
      CacheParameterGroupFamily: redis5.0
      Description:
        Ref: AWS::StackName
  ReplicationGroup:
    Type: AWS::ElastiCache::ReplicationGroup
    Properties:
      ReplicationGroupDescription: redis cache cluster
      AutomaticFailoverEnabled: false
      CacheNodeType: cache.t4g.micro
      CacheParameterGroupName:
        Ref: CacheParameterGroup
      CacheSubnetGroupName:
        Ref: SubnetGroup
      Engine: redis
      EngineVersion: 5.0.6
      PreferredMaintenanceWindow: sat:07:00-sat:08:00
      NumCacheClusters: 1
      SecurityGroupIds:
      - Fn::GetAtt:
        - SecurityGroup
        - GroupId
  DynamoDBEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName:
        Fn::Sub: com.amazonaws.${AWS::Region}.dynamodb
      VpcId:
        Ref: VPC
      RouteTableIds:
      - Fn::GetAtt:
        - PublicRouteTable
        - RouteTableId
      PolicyDocument:
        Id: Policy
        Version: '2012-10-17'
        Statement:
        - Sid: Statement
          Action: dynamodb:*
          Effect: Allow
          Resource: '*'
          Principal: '*'
  AddDrinkFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://capstone-schroedingers-rabbit-artifacts/ec88669dc816674b3b73fa786f49f3f1
      Handler: com.kenzie.capstone.service.lambda.AddDrink
      Runtime: java11
      Description: Add drink for given id
      MemorySize: 512
      Timeout: 240
      Policies:
      - AWSLambdaBasicExecutionRole
      - AWSLambda_ReadOnlyAccess
      - AWSXrayWriteOnlyAccess
      - AWSLambdaVPCAccessExecutionRole
      - AmazonS3FullAccess
      - AmazonDynamoDBFullAccess
      Tracing: Active
      VpcConfig:
        SecurityGroupIds:
        - Fn::GetAtt:
          - SecurityGroup
          - GroupId
        SubnetIds:
        - Ref: PublicSubnet
      Environment:
        Variables:
          JEDIS_URL:
            Fn::GetAtt:
            - ReplicationGroup
            - PrimaryEndPoint.Address
      Events:
        UpdateResource:
          Type: Api
          Properties:
            Path: /drinks
            Method: post
  DeleteDrinkFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://capstone-schroedingers-rabbit-artifacts/ec88669dc816674b3b73fa786f49f3f1
      Handler: com.kenzie.capstone.service.lambda.DeleteDrink
      Runtime: java11
      Description: Delete given drink
      MemorySize: 512
      Timeout: 240
      Policies:
      - AWSLambdaBasicExecutionRole
      - AWSLambda_ReadOnlyAccess
      - AWSXrayWriteOnlyAccess
      - AWSLambdaVPCAccessExecutionRole
      - AmazonS3FullAccess
      - AmazonDynamoDBFullAccess
      Tracing: Active
      VpcConfig:
        SecurityGroupIds:
        - Fn::GetAtt:
          - SecurityGroup
          - GroupId
        SubnetIds:
        - Ref: PublicSubnet
      Environment:
        Variables:
          JEDIS_URL:
            Fn::GetAtt:
            - ReplicationGroup
            - PrimaryEndPoint.Address
      Events:
        UpdateResource:
          Type: Api
          Properties:
            Path: /drinks/{id}
            Method: delete
  GetAllDrinksFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://capstone-schroedingers-rabbit-artifacts/ec88669dc816674b3b73fa786f49f3f1
      Handler: com.kenzie.capstone.service.lambda.GetAllDrinks
      Runtime: java11
      Description: Get all drinks
      MemorySize: 512
      Timeout: 240
      Policies:
      - AWSLambdaBasicExecutionRole
      - AWSLambda_ReadOnlyAccess
      - AWSXrayWriteOnlyAccess
      - AWSLambdaVPCAccessExecutionRole
      - AmazonS3FullAccess
      - AmazonDynamoDBFullAccess
      Tracing: Active
      VpcConfig:
        SecurityGroupIds:
        - Fn::GetAtt:
          - SecurityGroup
          - GroupId
        SubnetIds:
        - Ref: PublicSubnet
      Environment:
        Variables:
          JEDIS_URL:
            Fn::GetAtt:
            - ReplicationGroup
            - PrimaryEndPoint.Address
      Events:
        UpdateResource:
          Type: Api
          Properties:
            Path: /drinks
            Method: get
  GetDrinkFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://capstone-schroedingers-rabbit-artifacts/ec88669dc816674b3b73fa786f49f3f1
      Handler: com.kenzie.capstone.service.lambda.GetDrink
      Runtime: java11
      Description: Get specific drink
      MemorySize: 512
      Timeout: 240
      Policies:
      - AWSLambdaBasicExecutionRole
      - AWSLambda_ReadOnlyAccess
      - AWSXrayWriteOnlyAccess
      - AWSLambdaVPCAccessExecutionRole
      - AmazonS3FullAccess
      - AmazonDynamoDBFullAccess
      Tracing: Active
      VpcConfig:
        SecurityGroupIds:
        - Fn::GetAtt:
          - SecurityGroup
          - GroupId
        SubnetIds:
        - Ref: PublicSubnet
      Environment:
        Variables:
          JEDIS_URL:
            Fn::GetAtt:
            - ReplicationGroup
            - PrimaryEndPoint.Address
      Events:
        UpdateResource:
          Type: Api
          Properties:
            Path: /drinks/{id}
            Method: get
  GetDrinksByUserIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://capstone-schroedingers-rabbit-artifacts/ec88669dc816674b3b73fa786f49f3f1
      Handler: com.kenzie.capstone.service.lambda.GetDrinksByUserId
      Runtime: java11
      Description: Gets userId specific drinks
      MemorySize: 512
      Timeout: 240
      Policies:
      - AWSLambdaBasicExecutionRole
      - AWSLambda_ReadOnlyAccess
      - AWSXrayWriteOnlyAccess
      - AWSLambdaVPCAccessExecutionRole
      - AmazonS3FullAccess
      - AmazonDynamoDBFullAccess
      Tracing: Active
      VpcConfig:
        SecurityGroupIds:
        - Fn::GetAtt:
          - SecurityGroup
          - GroupId
        SubnetIds:
        - Ref: PublicSubnet
      Environment:
        Variables:
          JEDIS_URL:
            Fn::GetAtt:
            - ReplicationGroup
            - PrimaryEndPoint.Address
      Events:
        UpdateResource:
          Type: Api
          Properties:
            Path: /drinks/user/{id}
            Method: get
  UpdateDrinkFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://capstone-schroedingers-rabbit-artifacts/ec88669dc816674b3b73fa786f49f3f1
      Handler: com.kenzie.capstone.service.lambda.UpdateDrink
      Runtime: java11
      Description: Updates given drink
      MemorySize: 512
      Timeout: 240
      Policies:
      - AWSLambdaBasicExecutionRole
      - AWSLambda_ReadOnlyAccess
      - AWSXrayWriteOnlyAccess
      - AWSLambdaVPCAccessExecutionRole
      - AmazonS3FullAccess
      - AmazonDynamoDBFullAccess
      Tracing: Active
      VpcConfig:
        SecurityGroupIds:
        - Fn::GetAtt:
          - SecurityGroup
          - GroupId
        SubnetIds:
        - Ref: PublicSubnet
      Environment:
        Variables:
          JEDIS_URL:
            Fn::GetAtt:
            - ReplicationGroup
            - PrimaryEndPoint.Address
      Events:
        UpdateResource:
          Type: Api
          Properties:
            Path: /drinks/{id}
            Method: put
